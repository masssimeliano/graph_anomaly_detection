Absprache (16.05):
- Wie ist Rekonstruktion bei Anomalien im Vergleich zu anderen Knoten?
- 2 gelernte Features (Err, Emb) und 2 gegebene Features (Str, Str2)
- Kluster-Koeffizient
- Ziel: Am Ende vestehen, was für was besser ist

ToDo (16.05):
- Rekonstruktion durch Autoencoder hinzufügen - Simpel Autoencoder
- Neue Features als Attribute von NetworkX zu Attr + Str2 hinzufügen - Attr + Str3
- Mit Kluster-Koeffizient experimentieren - In Attr + Str3
- Loss gebraucht - CustomAnomalyDAE

Absprache (23.05):
- Kein max. AUC-ROC verwenden
- 100 Epochen
- Train/Test/Validation-Datasets
- Andere Performance-Metriken
- Komplexer Autoencoder
- Ähnliche Arbeiten ansehen
- PyGOD im Edit-Modus
- LaTeX

ToDo (23.05):
- Auf ca. 100 Epochen begrenzen - Erledigt
- Loss im Bezug auf Epochen beobachten - Erledigt
- Daten in Train/Test/Validation-Datasets unterteilen und verwenden
- Neue Performance- und Runtime-Metriken ansehen (ROC-AUC, recall@k, precision@k) - Erledigt
- Neue Modelle trainieren (Gad-NR, Cola, CARD) - Verweigert
- PyGOD im Edit-Modus ausführen - Erledigt
- Ähnliche Arbeiten ansehen
- LaTeX erstellen und beginnen - Erledigt
- Normalisierung von Ergebnissen durch 3-mal Lauf - Erledigt

Absprache (30.05):
- Zeit messen
- Fehler aus AnomalyDAE verwenden
- Versuchen den Fehlerart zu parsen

ToDo (30.05):
- Zeit messen - Erledigt
- Fehler aus AnomalyDAE verwenden - Erledigt in Attr + Error2
- LaTeX-Inhalt machen
- Ähnliche Arbeiten einsehen - Average Controllability, ID_Features (Count of cycles of length k = 1-6)
- Versuchen den Fehlerart zu parsen - Bei manchen beides, bei anderen - getrennt