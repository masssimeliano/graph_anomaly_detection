Absprache (16.05):
- Ziel (Rekonstruktionsfehler): Untersuchen, wie de Rekonstruktionsfehler bei Anomalien im Vergleich zu anderen Knoten ist?
- Was schon gibt und in der Arbeit gezeigt werden kann: 2 gelernte Features (Err, Emb) und 2 gegebene Features (Str, Str2)
- Vorschlag: Lokaler Kluster-Koeffizient fürs Lernen verwenden
- Ziel (Arbeit): Am Ende verstehen, welches Anreichen für welche Datasets besser ist

ToDo (16.05):
- Rekonstruktionsfehler von einem Autoencoder hinzufügen - Simpler Autoencoder
- Neue strukturelle Features als Attribute von NetworkX zu Attr + Str2 hinzufügen - Attr + Str3
- Mit Kluster-Koeffizient experimentieren - In Attr + Str3
- Loss untersuchen - CustomAnomalyDAE

Absprache (23.05):
- Kein max. AUC-ROC verwenden
- 100 Epochen
- Train/Test/Validation-Datasets machen Sinn
- Andere Performance-Metriken betrachten
- Komplexerer Autoencoder verwenden
- Ähnliche Arbeiten ansehen
- PyGOD im Edit-Modus ausführen
- LaTeX erstellen und beginnen zu bearbeiten

ToDo (23.05):
- Auf ca. 100 Epochen begrenzen - Erledigt
- Loss im Bezug auf Epochen beobachten - Erledigt
- Daten in Train/Test/Validation-Datasets unterteilen und verwenden - Nicht aktuell
- Neue Performance- und Runtime-Metriken ansehen (recall@k, precision@k) - Erledigt
- Neue Modelle trainieren (Gad-NR, Cola, CARD)
- PyGOD im Edit-Modus ausführen - Erledigt
- Ähnliche Arbeiten ansehen
- LaTeX erstellen - Erledigt
- Normalisierung von Ergebnissen durch den 3-maligen Lauf - Erledigt

Absprache (30.05):
- Zeit sollte auch gemessen werden
- Fehler aus AnomalyDAE könnten im Vergleich zum Autoencoder verwendet werden
- Versuchen den Fehlerart zu parsen

ToDo (30.05):
- Zeit messen - Erledigt
- Fehler aus AnomalyDAE verwenden - In Attr + Error2
- LaTeX-Inhalt machen
- Ähnliche Arbeiten einsehen - Average Controllability, ID_Features (Count of cycles of length k = 1-6)
- Versuchen den Fehlerart zu parsen - Bei manchen beides, bei anderen - getrennt

Absprache (06.06):
- Neue Modelle sollten trainiert werden (Gad-NR, Cola, CARD)
- In related works schauen

ToDo (06.06):
- Neue Modelle trainieren (Gad-NR, Cola, CARD)
- Neue Feature berechnen (Average Controllability, ID_Features)
- In ähnliche Arbeiten schauen
- Letztes Refactoring
- Kommentare hinzufügen
- GitHub-Seite bearbeiten
- LaTeX-Inhalt machen